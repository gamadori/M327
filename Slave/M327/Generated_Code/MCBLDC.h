/* ###################################################################
**     THIS COMPONENT MODULE IS GENERATED BY THE TOOL. DO NOT MODIFY IT.
**     Filename    : MCBLDC.h
**     Project     : M327
**     Processor   : MC56F84789VLL
**     Component   : MC_BldcHallSensor
**     Version     : Component 01.009, Driver 01.16, CPU db: 3.50.001
**     Compiler    : CodeWarrior DSP C Compiler
**     Date/Time   : 2016-11-17, 22:35, # CodeGen: 172
**     Abstract    :
**          These functions, named bldchs, determine which transistors
**          must be enabled for PWM modulation according to signals from
**          the Hall Sensors. These functions are basic functions for BLDC
**          motor control, (commutation), with the Hall Sensors.
**          The function bldchsCommHandlerInd is designed for independent
**          PWM mode and the function bldchsCommHandlerComp is designed
**          for complementary PWM mode.
**     Settings    :
**          This bean has no settings.
**     Contents    :
**         bldchsCommHandlerInd  - inline mc_tPWMSignalMask MCBLDC_bldchsCommHandlerInd(UWord16 HallSensors,...
**         bldchsCommHandlerComp - inline pwm_sChannelControl MCBLDC_bldchsCommHandlerComp(UWord16 HallSensors,...
**
**     (c) Freescale Semiconductor, Inc.
**     2004 All Rights Reserved
**
**     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file MCBLDC.h
** @version 01.16
** @brief
**          These functions, named bldchs, determine which transistors
**          must be enabled for PWM modulation according to signals from
**          the Hall Sensors. These functions are basic functions for BLDC
**          motor control, (commutation), with the Hall Sensors.
**          The function bldchsCommHandlerInd is designed for independent
**          PWM mode and the function bldchsCommHandlerComp is designed
**          for complementary PWM mode.
*/         
/*!
**  @addtogroup MCBLDC_module MCBLDC module documentation
**  @{
*/         

#ifndef __MCBLDC
#define __MCBLDC

/* MODULE MCBLDC. */

/*Include shared modules, which are used for whole project*/
#include "PE_Types.h"
#include "PE_Error.h"
#include "PE_Const.h"
#include "IO_Map.h"
/* Include inherited beans */
#include "port.h"

#include "Cpu.h"


#ifndef __PE_peslPWM
  #ifndef _Bldc_pwm_tPWMChannelSwap
    typedef UWord16 pwm_tPWMChannelSwap;
    #define _Bldc_pwm_tPWMChannelSwap
  #endif
#endif
#ifndef __PE_peslPWM
  #ifndef _Bldc_pwm_sChannelControl
    typedef struct
    {
      mc_tPWMSignalMask     Mask;
      pwm_tPWMChannelSwap   Swap;
    }pwm_sChannelControl;
    #define _Bldc_pwm_sChannelControl
  #endif
#endif


#define bldchsCommHandlerInd(HallSensors, VoltagePolarity, pCommutationTable) MCBLDC_bldchsCommHandlerInd(HallSensors, VoltagePolarity, pCommutationTable)
inline mc_tPWMSignalMask MCBLDC_bldchsCommHandlerInd(UWord16 HallSensors,Word16 VoltagePolarity,const mc_tPWMSignalMask * pCommutationTable)
{
  if (VoltagePolarity == 0) {
    return(pCommutationTable[0]);
  }
  if (VoltagePolarity < 0) {
    HallSensors = ~HallSensors & 0x0007;
  }
  return(pCommutationTable[HallSensors]);
}
/*
** ===================================================================
**     Method      :  MCBLDC_bldchsCommHandlerInd (component MC_BldcHallSensor)
**     Description :
**         This function returns value from table which is pointed by
**         *pCommutationTable. The table index is given by HallSensors
**         and Voltage Polarity variables. If the VoltagePolarity is
**         zero, the function returns value with index zero. If the
**         VoltagePolarity > 0 the index is given by HallSensors value,
**         if the VoltagePolarity < 0 the index is given by negate
**         value of HallSensors. The table values represent which
**         transistor is under PWM control (enabled/disabled).
**     Parameters  :
**         NAME            - DESCRIPTION
**         HallSensors     - State of Hall Sensors.
**         VoltagePolarity - Required Voltage
**                           Polarity.
**       * pCommutationTable - Pointer to
**                           Commutation Table.
**     Returns     :
**         ---             - State of transistors (enabled/disabled).
** ===================================================================
*/

#define bldchsCommHandlerComp(HallSensors, pCommutationTable) MCBLDC_bldchsCommHandlerComp(HallSensors, pCommutationTable)
inline pwm_sChannelControl MCBLDC_bldchsCommHandlerComp(UWord16 HallSensors,const pwm_sChannelControl *pCommutationTable)
{
  return(pCommutationTable[HallSensors]);
}
/*
** ===================================================================
**     Method      :  MCBLDC_bldchsCommHandlerComp (component MC_BldcHallSensor)
**     Description :
**         This function returns pointer on structure from the
**         commutation table. The table index is given by HallSensors
**         value. The table values represent which transistor is under
**         PWM control (enabled/disabled, swap/no swap).
**     Parameters  :
**         NAME            - DESCRIPTION
**         HallSensors     - State of Hall Sensors.
**       * pCommutationTable - Pointer to
**                           Commutation Table.
**     Returns     :
**         ---             - State of transistors (enabled/disabled,
**                           swap/no swap).
** ===================================================================
*/

/* END MCBLDC. */

#endif /* ifndef __MCBLDC */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale 56800 series of microcontrollers.
**
** ###################################################################
*/
